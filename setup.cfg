[metadata]
name = qrl
description = Quantum Resistant Ledger Node
author = The Quantum Resistant Ledger Team
author-email = info@theQRL.org
license = mit
url = https://theqrl.org
long-description = README.pypi

platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.5

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# Add here dependencies of your project (semicolon-separated), e.g.
# install_requires = numpy; scipy
install_requires =
    setuptools>=39.0.0
    leveldb==0.20
    ntplib>=0.3.3
    Twisted>=17.5.0
    colorlog>=3.0.1
    simplejson>=3.11.1
    PyYAML==3.12
    grpcio-tools>=1.9.0,<=1.10.0
    grpcio>=1.9.0,<=1.10.0
    service_identity
    protobuf
    pyopenssl>=17.3.0
    six>=1.9
    click==6.7
    pyqrllib>=0.9.0,<0.10.0
    pyqryptonight>=0.10.0,<0.11.0
    Flask==0.12.2
    json-rpc==1.10.8
    cryptography
    mock>=2.0.0

# Add here test requirements (semicolon-separated)
tests_require =
    pytest
    pytest-cov
    pytest-flake8
    pytest-xdist
    flake8
    autoflake
    timeout-decorator
    nose
    pycrypto

[versioneer]
VCS = git
style = pep440
versionfile_source = src/qrl/_version.py
versionfile_build = qrl/_version.py
tag_prefix = v

[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install demo[PDF]` like:
# PDF = ReportLab; RXP

[test]
# py.test options when running `python setup.py test`
addopts = tests src/qrl

[nosetests]
exclude = "test_integration/*"

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov src/qrl --cov-report term-missing --cov-report xml
    --doctest-modules -s
    --flake8
    --verbose

norecursedirs =
    dist
    build
    .tox

flake8-max-line-length = 160
flake8-ignore = N801 N802 N803 N805 N806
flake8-exclude = src/qrl/generated,tests_integration,src/qrl/crypto/doctest_data.py

[aliases]
release = sdist bdist_wheel upload
docs = build_sphinx

[bdist_wheel]
# Use this option if your package is pure-python
universal = 0

[build_sphinx]
source_dir = docs
build_dir = docs/_build

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[flake8]
max-line-length = 160
ignore = N801 N802 N803 N805 N806 E126
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py
    src/qrl/generated
    tests_integration
    src/qrl/crypto/doctest_data.py

[pep8]
max-line-length = 160
exclude = ./src/qrl/generated,./tests_integration,./src/qrl/crypto/doctest_data.py

[pycodestyle]
# Warning Version has been temporarily added, until the
# issue with latest version of pycodestyle is resovled
version = 2.3.1
max-line-length = 160
exclude = ./src/qrl/generated,./tests_integration,./src/qrl/crypto/doctest_data.py,./docs

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 3.0.2
package = qrl
